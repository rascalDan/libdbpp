import testing ;

path-constant me : . ;

lib boost_utf : : <name>boost_unit_test_framework ;
lib IceUtil ;

run
	testConnection.cpp mockdb.cpp
	: : :
	<define>ROOT=\"$(me)\"
	<define>BOOST_TEST_DYN_LINK
	<library>..//dbppcore
	<library>..//adhocutil
	<library>boost_utf
	<dependency>parseTest.sql
	<dependency>unterminatedComment.sql
	<dependency>unterminatedString.sql
	<dependency>unterminatedDollarQuote.sql
	<dependency>dollarQuote.sql
	<dependency>scriptDir.sql
	<dependency>stringParse.sql
	:
	testConnection
	;

run
	testPatch.cpp
	: :
	patch.sql
	source.dat
	target.dat
	:
	<define>ROOT=\"$(me)\"
	<define>BOOST_TEST_DYN_LINK
	<library>..//dbppcore
	<library>..//adhocutil
	<library>../../libpqpp//dbpp-postgresql
	<library>boost_utf
	:
	testPatch
	;

run
	testConnectionPool.cpp
	: : :
	<define>ROOT=\"$(me)\"
	<define>BOOST_TEST_DYN_LINK
	<library>..//dbppcore
	<library>..//adhocutil
	<library>../../libpqpp//dbpp-postgresql
	<library>boost_utf
	:
	testConnectionPool
	;

run
	testUtils.cpp
	: : :
	<define>ROOT=\"$(me)\"
	<define>BOOST_TEST_DYN_LINK
	<library>..//dbppcore
	<library>..//adhocutil
	<library>../../libpqpp//dbpp-postgresql
	<library>boost_utf
	<library>IceUtil
	<dependency>util.sql
	:
	testUtils
	;

run
	testMock.cpp mockdb.cpp
	: : :
	<define>ROOT=\"$(me)\"
	<define>BOOST_TEST_DYN_LINK
	<library>..//dbppcore
	<library>..//adhocutil
	<library>../../libpqpp//dbpp-postgresql
	<library>boost_utf
	<dependency>badMock.sql
	:
	testMock
	;

